#!/usr/bin/env python

import glob
import os
import sys
import numpy as np
import pyfits

def readSpotDir(path, verbose=False):
    """ Read all the spot files generated by the zemax people. Also read the summary file, which gives the x,y offsets.

    We use the filenames to yield the fiber# and wavelength.
    """
    
    spotDtype = np.dtype([('fiberIdx','i2'),
                          ('wavelength','f4'),
                          ('spot_xc','f4'), ('spot_yc','f4'),
                          ('spot', '(256,256)f4')])

    summaryDtype = np.dtype([('fiberIdx','i2'),
                             ('wavelength','f4'),
                             ('spot_xc','f4'), ('spot_yc','f4')])
    
    names = glob.glob(os.path.join(path, "fiber_*.asc"))
    summaryFile = os.path.join(path, "centroids.txt")
    summary = np.genfromtxt(summaryFile, dtype=summaryDtype,
                            skip_header=4, skip_footer=3,
                            usecols=(0,1,2,3))

    if len(names) != len(summary):
        raise RuntimeError("%d spot files but %d centroid.txt lines" % (len(names),
                                                                        len(summary)))
        
    spots = []
    for fiberIdx,wavelength,xc,yc in summary:
        # Blue has too many errors, and cannot be read.
        if wavelength == 3945:
            wavelength = 3950
        if wavelength == 4090:
            wavelength = 4100
        if wavelength == 4235:
            wavelength = 4250
        
        # IR
        if wavelength == 10030:
            wavelength = 10029
        if wavelength == 12670:
            wavelength = 12669
        spotfileName = os.path.join(path, "fiber_%05d_%05d.asc" % (fiberIdx, wavelength))
        
        if verbose:
          sys.stderr.write('reading (%d, %0.1f)\n' % (fiberIdx, wavelength))  
        spot = np.genfromtxt(spotfileName, dtype='f4',
                             skip_header=11)
        spots.append((fiberIdx, wavelength, xc, yc, spot))

    arr = np.array(spots, dtype=spotDtype)
    
    # Now add in the symmetric left/right side...
    # For now keep fiber 0 and xc 0.0 at the center.
    otherside = arr[1::-1]
    otherside['spot_xc'] *= -1
    otherside['fiberIdx'] *= -1

    return arr

def writeSpotFITS(spotDir, data):

    phdu = pyfits.PrimaryHDU()
    phdr = phdu.header
    phdr.update('pixscale', 0.001, 'mm/pixel')

    cols = []
    cols.append(pyfits.Column(name='fiberIdx',
                              format='I',
                              array=data['fiberIdx']))
    cols.append(pyfits.Column(name='wavelength',
                              format='D',
                              array=data['wavelength']))
    cols.append(pyfits.Column(name='spot_xc',
                              format='D',
                              array=data['spot_xc']))
    cols.append(pyfits.Column(name='spot_yc',
                              format='D',
                              array=data['spot_yc']))
    spots = data['spot'][:]
    spots.shape = (len(spots), 256*256)
    cols.append(pyfits.Column(name='spot',
                              format='%dE' % (256*256),
                              dim='(256,256)',
                              array=spots))
    colDefs = pyfits.ColDefs(cols)

    thdu = pyfits.new_table(colDefs)
    hdulist = pyfits.HDUList([phdu, thdu])

    hdulist.writeto(os.path.join(spotDir, 'spots.fits'), 
                    checksum=True, clobber=True)
    
def main(argv):
    """ Convert a directory of zemax spot files into a slightly more convenient FITS table. """
    
    spotDir = os.path.join(os.environ['DRP_INSTDATA_DIR'], 'data/spots/zemax', argv[0])

    data = readSpotDir(spotDir)
    writeSpotFITS(spotDir, data)
    
if __name__ == "__main__":
    main(sys.argv[1:])
